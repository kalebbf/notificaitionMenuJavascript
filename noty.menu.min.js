(function( $ ){
        var createElements ={
            li:function(){
                return document.createElement('li');    
            },
            ul:function(){
                return document.createElement('ul');
            }
        } ;
        var object = {
            initEvents:function(){
                $('#containerGeralNotify').on('click',function(){
                   $('#containerLista').toggle('slow');
               });
            },
            init:function(options){
               var count = options.count;
               count = (count>0 && typeof count!=='undefined' ? count: 0);
               $('#noty-menuList_numeroMsg').append(count);
               var ul = createElements.ul(); 
               ul.setAttribute('id','list-noty');
               options.listMessages.forEach(function(item, index){
                   var li =createElements.li();
                   var texto="";
                   if(item.texto.length > 65){
                    texto= item.texto.substring(0,65)+"...";
                }else{
                    texto = item.texto;
                }
                if(item.lido =='N'){        
                    li.setAttribute('class','item '+item.tipo);
                }else  
                if(item.lido =='S'){
                  li.setAttribute('class','item '+item.tipo+" noty-menuListlido");
              }
              li.setAttribute('obj',item.tipo);
              li.append(texto);
              ul.append(li);
          });
               $(ul).find('li').on('click',function(event){
                alert('open notification');
            });
               $('#containerLista').append(ul);   
           }
       };

       var methods = {
        init : function(options) {
            object.init(options);
            object.initEvents();
        },
        newMessage : function( ) {    },// IS
        openList : function( ) {  },// GOOD
        closeList : function( content ) {  }// !!!
    };

    $.fn.menuNoty = function(methodOrOptions) {
        if ( methods[methodOrOptions] ) {
            return methods[ methodOrOptions ].apply( this, Array.prototype.slice.call( arguments, 1 ));
        } else if ( typeof methodOrOptions === 'object' || ! methodOrOptions ) {
            // Default to "init"
            return methods.init.apply( this, arguments );
        } else {
            $.error( 'Method ' +  methodOrOptions + ' does not exist on jQuery.tooltip' );
        }    
    };


})( jQuery ); 
// Usage example:
//$( "a" ).init();

/*		 PRIXMO MODULO


! function(a, b) {
    "function" == typeof define && define.amd ? define(["jquery"], b) : "object" == typeof exports ? module.exports = b(require("jquery")) : b(a.jQuery)
}(this, function(a) {
    "function" != typeof Object.create && (Object.create = function(a) {
        function b() {}
        return b.prototype = a, new b
    });
	a.menuNoty.renderer= {},
		a.menuNoty.renderer.init= function(){},
		

});



*/