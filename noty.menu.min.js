(function( $ ){
  var optionsF={
    notify:{
      animateHideCss:"animated fadeOutLeft",
      animateShowCss:"animated fadeInLeft"
    }
  };
  var createElements ={
    li:function(){
      return document.createElement('li');    
    },
    ul:function(){
      return document.createElement('ul');
    },
    message:function(obj,type){
      var optionMessage = (typeof optionsF.notify!=='undefined' ? optionsF.notify:{} );
      var mDiv= document.createElement('div');
      mDiv.classList.add('noty_bar');
      mDiv.onclick = function(event){
        debugger;
        if(optionMessage.animateHideCss){
          optionMessage.animateHideCss.split(' ').forEach(function(item, index){
            mDiv.classList.add(item);  
          });
        }
      };
      if(optionMessage.animateShowCss){
        var classCss = optionMessage.animateShowCss.split(' ');
        classCss.forEach(function(item, index){
          mDiv.classList.add(item);  
        });
      }
      mDiv.style= "position: absolute;width: 300px;max-width: 300px;min-width: 300px;margin: 2px 0px 0px 2px;";
      mDiv.classList.add(obj.tipo);
      mDiv.classList.add('noty_type_'+obj.tipo);

      var divMess= document.createElement('div');
      divMess.classList.add('noty_message');
      divMess.style ="font-size: 13px; line-height: 16px; text-align: center; padding: 10px; width: auto; position: relative;";

      var spanText = document.createElement('span');
      spanText.classList.add('noty_text');
      spanText.append(obj.texto);
      divMess.append(spanText);
      mDiv.append(divMess);
      return mDiv;
    }
  } ;
  var object = {
    initEvents:function(){
      $('#containerGeralNotify').on('click',function(event){
       $('#containerLista').toggle('slow');
       event.stopPropagation();
     });
      $(document).click(function(){
        if($('#containerLista').is(':visible')){
          $('#containerLista').toggle('slow');
        }

      });
      $('').on('click',function(){

      });
    },
    init:function(options){

     optionsF = options;
     var count = (typeof options.count!=='undefined' && options.count>0 ? options.count:function(){
      var c=0;

      options.listMessages.forEach(function(item, index){

        if(item.lido ==='N')        
          c++;    

      });
      return c;
    } );
     if(typeof count ==='function')
       count = count();

     $('#noty-menuList_numeroMsg').append(count);
     var ul = createElements.ul(); 
     ul.setAttribute('id','list-noty');

     options.listMessages.forEach(function(item, index){
       var li =createElements.li();
       var texto="";
       if(item.texto.length > 65){
        texto= item.texto.substring(0,65)+"...";
      }else{
        texto = item.texto;
      }
      if(item.lido =='N'){        
        li.setAttribute('class','item '+item.tipo);
      }else  
      if(item.lido =='S'){
        li.setAttribute('class','item '+item.tipo+" noty-menuListlido");
      }
      li.setAttribute('obj',JSON.stringify(item));
              //li.setAttribute();
              li.append(texto);
              ul.append(li);
            });
     $(ul).find('li').on('click',function(event){
      var message = createElements.message(
        JSON.parse($(this).attr('obj'))
        );
      $('body').prepend(
        message
        );
    });
     $('#containerLista').append(ul);   
   }
 };

 var methods = {
  init : function(options) {
    debugger;
    object.init(options);
    object.initEvents();
  },
  newMessage : function( ) {    },
  openList : function( ) {  },
  closeList : function( content ) {  }
};
window.menuNoty = function(methodOrOptions) {
 $(this);
 if ( methods[methodOrOptions] ) {
  return methods[ methodOrOptions ].apply( this, Array.prototype.slice.call( arguments, 1 ));
} else if ( typeof methodOrOptions === 'object' || ! methodOrOptions ) {
  return methods.init.apply( this, arguments );
} else {
  $.error( 'Method ' +  methodOrOptions + ' does not exist on jQuery.tooltip' );
}    
};
})( jQuery ); 
